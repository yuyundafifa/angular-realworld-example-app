{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2022-01-23T15:40:29.305Z",
    "end": "2022-01-23T15:41:44.008Z",
    "duration": 52259,
    "testsRegistered": 6,
    "passPercent": 66.66666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b9372005-55e2-4c5c-8e1f-ae37e29dca66",
      "title": "",
      "fullFile": "cypress/integration/secondTest.spec.js",
      "file": "cypress/integration/secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c871d822-9359-4aa6-a238-6ab53536e004",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify user can log out successfully",
              "fullTitle": "Test log out verify user can log out successfully",
              "timedOut": null,
              "duration": 5797,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "9b26ac9d-abcd-4fb1-bbdb-21f17e020dff",
              "parentUUID": "c871d822-9359-4aa6-a238-6ab53536e004",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b26ac9d-abcd-4fb1-bbdb-21f17e020dff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5797,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b424a386-3c12-4a58-aba7-aafc0a4ec18c",
      "title": "",
      "fullFile": "cypress/integration/firstTest.spec.js",
      "file": "cypress/integration/firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4c7e136-3879-4b1c-9506-fdc83dcd531d",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 13199,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('The Articles');\ncy.get('[formcontrolname=\"description\"]').type('Test Articles');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of Articles');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of Articles');\n  expect(xhr.response.body.article.description).to.equal('Test Articles');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'statusCode')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'statusCode')\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress/integration/firstTest.spec.js:120:27)",
                "diff": null
              },
              "uuid": "8be5fe90-5980-481c-b8f3-d4ad1db2d5dd",
              "parentUUID": "c4c7e136-3879-4b1c-9506-fdc83dcd531d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 9564,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept({method:'POST', url:'https://api.realworld.io/api/articles/'}\n//  ,(req)=>{\n//     req.body.article.description = \"This is the description 2\"\n//  }).as('postArticles')\ncy.intercept({\n  method: 'POST',\n  url: Cypress.env('apiUrl') + 'api/articles/'\n}, req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is the description');\n    res.body.article.description = \"This is the description 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('Articles 15');\ncy.get('[formcontrolname=\"description\"]').type('This is the description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of Articles');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of Articles');\n  expect(xhr.response.body.article.description).to.equal('This is the description 2');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at eval (http://localhost:4200/__cypress/tests?p=cypress/integration/firstTest.spec.js:135:33)",
                "diff": null
              },
              "uuid": "96751e67-d83f-43c7-837c-1fd28654cccc",
              "parentUUID": "c4c7e136-3879-4b1c-9506-fdc83dcd531d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 6483,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "8f26394b-9d71-411b-87f1-b8a075c2d59d",
              "parentUUID": "c4c7e136-3879-4b1c-9506-fdc83dcd531d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 8834,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfbuttons => {\n  expect(listOfbuttons[0]).to.contain('5');\n  expect(listOfbuttons[1]).to.contain('10');\n});\ncy.fixture('articles').then(file => {\n  const articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + 'favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '11');",
              "err": {},
              "uuid": "4585c25a-7833-4c02-8124-a852eb207d31",
              "parentUUID": "c4c7e136-3879-4b1c-9506-fdc83dcd531d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 8382,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const uniqueTitle = Math.floor(Math.random() * 99999);\nconst bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Tested by API \" + uniqueTitle,\n    \"description\": \"This is description\",\n    \"body\": \"Just test\"\n  }\n};\ncy.get('@token').then(token => {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n});",
              "err": {},
              "uuid": "f24efcf6-179d-4db6-a763-7b95e0e6ee18",
              "parentUUID": "c4c7e136-3879-4b1c-9506-fdc83dcd531d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f26394b-9d71-411b-87f1-b8a075c2d59d",
            "4585c25a-7833-4c02-8124-a852eb207d31",
            "f24efcf6-179d-4db6-a763-7b95e0e6ee18"
          ],
          "failures": [
            "8be5fe90-5980-481c-b8f3-d4ad1db2d5dd",
            "96751e67-d83f-43c7-837c-1fd28654cccc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 46462,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}